-- LUCAS SILVA  
-- ACTIVIDAD SUMATIVA N°3 

/* =================================================================
   ================       MINIMARKET DOÑA MARTA       ==============
   =================================================================*/
   
DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS;
DROP TABLE VENTA CASCADE CONSTRAINTS;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE ADMINISTRATIVO CASCADE CONSTRAINTS;
DROP TABLE VENDEDOR CASCADE CONSTRAINTS;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS;
DROP TABLE CATEGORIA CASCADE CONSTRAINTS;
DROP TABLE MARCA CASCADE CONSTRAINTS;
DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS;
DROP TABLE SALUD CASCADE CONSTRAINTS;
DROP TABLE AFP CASCADE CONSTRAINTS;
DROP TABLE COMUNA CASCADE CONSTRAINTS;
DROP TABLE REGION CASCADE CONSTRAINTS;                                             


--CASO 1: IMPLEMENTACION DEL MODELO (CREACION DE TABLAS CON SUS RESPECTIVAS RESTRICCIONES, DESDE EL MODELO RACIONAL)

CREATE TABLE REGION (
    ID_REGION NUMBER(4),
    NOM_REGION VARCHAR2(255),
    CONSTRAINT REGION_PK PRIMARY KEY (ID_REGION)
);

CREATE TABLE COMUNA (
    ID_COMUNA NUMBER(4),
    NOM_COMUNA VARCHAR2(200),
    COD_REGION NUMBER(4),
    CONSTRAINT COMUNA_PK PRIMARY KEY (ID_COMUNA),
    CONSTRAINT COMUNA_FK_REGION FOREIGN KEY (COD_REGION)
        REFERENCES REGION(ID_REGION)
);

CREATE TABLE AFP (
    ID_AFP NUMBER GENERATED ALWAYS AS IDENTITY (
        START WITH 210 INCREMENT BY 6
    ),
    NOM_AFP VARCHAR2(255),
    CONSTRAINT AFP_PK PRIMARY KEY (ID_AFP)
);

CREATE TABLE SALUD (
    ID_SALUD NUMBER(4),
    NOM_SALUD VARCHAR2(40),
    CONSTRAINT SALUD_PK PRIMARY KEY (ID_SALUD)
);


CREATE TABLE MEDIO_PAGO (
    ID_MPAGO NUMBER(3),
    NOMBRE_MPAGO VARCHAR2(50),
    CONSTRAINT MEDIO_PAGO_PK PRIMARY KEY (ID_MPAGO)
);

CREATE TABLE MARCA (
    ID_MARCA NUMBER(3),
    NOMBRE_MARCA VARCHAR2(25),
    CONSTRAINT MARCA_PK PRIMARY KEY (ID_MARCA)
);

CREATE TABLE CATEGORIA (
    ID_CATEGORIA NUMBER(3),
    NOMBRE_CATEGORIA VARCHAR2(255),
    CONSTRAINT CATEGORIA_PK PRIMARY KEY (ID_CATEGORIA)
);

CREATE TABLE PROVEEDOR (
    ID_PROVEEDOR NUMBER(5),
    NOMBRE_PROVEEDOR VARCHAR2(150),
    DIRECCION VARCHAR2(200),
    TELEFONO VARCHAR2(10),
    EMAIL VARCHAR2(100),
    CONTACTO VARCHAR2(100),
    COD_COMUNA NUMBER(4),
    CONSTRAINT PROVEEDOR_PK PRIMARY KEY (ID_PROVEEDOR),
    CONSTRAINT PROVEEDOR_FK_COMUNA FOREIGN KEY (COD_COMUNA)
        REFERENCES COMUNA(ID_COMUNA)
);

CREATE TABLE EMPLEADO (
    ID_EMPLEADO NUMBER(4),
    RUT_EMPLEADO VARCHAR2(10),
    NOMBRE_EMPLEADO VARCHAR2(25),
    APELLIDO_PATERNO VARCHAR2(25),
    APELLIDO_MATERNO VARCHAR2(25),
    FECHA_CONTRATACION DATE,
    SUELDO_BASE NUMBER(10),
    BONO_JEFATURA NUMBER(10),
    ACTIVO CHAR(1),
    TIPO_EMPLEADO VARCHAR2(25),
    COD_EMPLEADO NUMBER(4), -- jefe
    COD_SALUD NUMBER(4),
    COD_AFP NUMBER(5),
    CONSTRAINT EMPLEADO_PK PRIMARY KEY (ID_EMPLEADO),
    CONSTRAINT EMPLEADO_FK_SALUD FOREIGN KEY (COD_SALUD)
        REFERENCES SALUD(ID_SALUD),
    CONSTRAINT EMPLEADO_FK_AFP FOREIGN KEY (COD_AFP)
        REFERENCES AFP(ID_AFP),
    CONSTRAINT EMPLEADO_FK_EMPLEADO FOREIGN KEY (COD_EMPLEADO)
        REFERENCES EMPLEADO(ID_EMPLEADO)
);

CREATE TABLE VENDEDOR (
    ID_EMPLEADO NUMBER(4),
    COMISION_VENTA NUMBER(5,2),
    CONSTRAINT VENDEDOR_PK PRIMARY KEY (ID_EMPLEADO),
    CONSTRAINT VENDEDOR_FK_EMPLEADO FOREIGN KEY (ID_EMPLEADO)
        REFERENCES EMPLEADO(ID_EMPLEADO)
);

CREATE TABLE ADMINISTRATIVO (
    ID_EMPLEADO NUMBER(4),
    CONSTRAINT ADMINISTRATIVO_PK PRIMARY KEY (ID_EMPLEADO),
    CONSTRAINT ADMIN_FK_EMPLEADO FOREIGN KEY (ID_EMPLEADO)
        REFERENCES EMPLEADO(ID_EMPLEADO)
);

CREATE TABLE PRODUCTO (
    ID_PRODUCTO NUMBER(4),
    NOMBRE_PRODUCTO VARCHAR2(100),
    PRECIO_UNITARIO NUMBER,
    ORIGEN_NACIONAL CHAR(1),
    STOCK_MINIMO NUMBER(3),
    ACTIVO CHAR(1),
    COD_MARCA NUMBER(3),
    COD_CATEGORIA NUMBER(3),
    COD_PROVEEDOR NUMBER(5),
    CONSTRAINT PRODUCTO_PK PRIMARY KEY (ID_PRODUCTO),
    CONSTRAINT PRODUCTO_FK_MARCA FOREIGN KEY (COD_MARCA)
        REFERENCES MARCA(ID_MARCA),
    CONSTRAINT PRODUCTO_FK_CATEGORIA FOREIGN KEY (COD_CATEGORIA)
        REFERENCES CATEGORIA(ID_CATEGORIA),
    CONSTRAINT PRODUCTO_FK_PROVEEDOR FOREIGN KEY (COD_PROVEEDOR)
        REFERENCES PROVEEDOR(ID_PROVEEDOR)
);

CREATE TABLE VENTA (
    ID_VENTA NUMBER GENERATED ALWAYS AS IDENTITY (
        START WITH 5050 INCREMENT BY 3
    ),
    FECHA_VENTA DATE,
    TOTAL_VENTA NUMBER(10),
    COD_MPAGO NUMBER(3),
    COD_EMPLEADO NUMBER(4),
    CONSTRAINT VENTA_PK PRIMARY KEY (ID_VENTA),
    CONSTRAINT VENTA_FK_MEDIO_PAGO FOREIGN KEY (COD_MPAGO)
        REFERENCES MEDIO_PAGO(ID_MPAGO),
    CONSTRAINT VENTA_FK_EMPLEADO FOREIGN KEY (COD_EMPLEADO)
        REFERENCES EMPLEADO(ID_EMPLEADO)
);

CREATE TABLE DETALLE_VENTA (
    COD_VENTA NUMBER(4),
    COD_PRODUCTO NUMBER(4),
    CANTIDAD NUMBER(6),
    CONSTRAINT DETALLE_VENTA_PK PRIMARY KEY (COD_VENTA, COD_PRODUCTO),
    CONSTRAINT DET_VENTA_FK_VENTA FOREIGN KEY (COD_VENTA)
        REFERENCES VENTA(ID_VENTA),
    CONSTRAINT DET_VENTA_FK_PRODUCTO FOREIGN KEY (COD_PRODUCTO)
        REFERENCES PRODUCTO(ID_PRODUCTO)
);


--========================================================================= 


--CASO 2: MODIFICACION DEL MODELO (USANDO SENTENCIA ALTER TABLE)


-- PARA LA TABLA EMPLEADO, DONDE EL SUELDO BASE MINIMO DEBE SER DE $400.000.
ALTER TABLE EMPLEADO
ADD CONSTRAINT CK_EMPLEADO_SUELDO_MINIMO
CHECK (SUELDO_BASE >= 400000);

-- PARA LA TABLA VENDEDOR, DONDE LA COMISION DEBE SER ENTRE 0 Y 0.25.
ALTER TABLE VENDEDOR
ADD CONSTRAINT CK_VENDEDOR_COMISION
CHECK (COMISION_VENTA BETWEEN 0 AND 0.25);

-- PARA LA TABLA PRODUCTO, DONDE EL STOCK MINIMO DEBE SER AL MENOS 3 UNIDADES.
ALTER TABLE PRODUCTO
ADD CONSTRAINT CK_PRODUCTO_STOCK_MINIMO
CHECK (STOCK_MINIMO >= 3);

-- PARA LA TABLA PROVEEDOR, DONDE EL CORREO ELECTRONICO DEBE SER UNICO.
ALTER TABLE PROVEEDOR
ADD CONSTRAINT UN_PROVEEDOR_EMAIL
UNIQUE (EMAIL);

-- PARA LA TABLA MARCA, DONDE EL NOMBRE DE LA MARCA DEBE SER UNICO.
ALTER TABLE MARCA
ADD CONSTRAINT UN_MARCA_NOMBRE
UNIQUE (NOMBRE_MARCA);

-- PARA LA TABLA DETALLE_VENTA, DONDE LA CANTIDAD DEBE SER MAYOR A CERO. 
ALTER TABLE DETALLE_VENTA
ADD CONSTRAINT CK_DETALLE_VENTA_CANTIDAD
CHECK (CANTIDAD >= 1);

--========================================================================= 
 
 
--CASO 3: POBLACION DEL MODELO (CON SECUENCIAS PEDIDAS EN EL CASO 3)
--PD: PROFE LOS DATOS FUERON SACADOS DE LA FIGURA N°2

DROP SEQUENCE SEQ_SALUD;
DROP SEQUENCE SEQ_EMPLEADO;

CREATE SEQUENCE SEQ_SALUD
START WITH 2050
INCREMENT BY 10;

CREATE SEQUENCE SEQ_EMPLEADO
START WITH 750
INCREMENT BY 3;


DROP TABLE AFP CASCADE CONSTRAINTS; --(TUVE QUE ELIMINAR LA TABLA, YA QUE AL EJECUTAR EL SCRIPT ME ARROJABA ERROR, AL IGUAL CON LAS SECUENCIAS)

CREATE TABLE AFP (
    ID_AFP NUMBER GENERATED BY DEFAULT AS IDENTITY, 
    NOM_AFP VARCHAR2(255),
    CONSTRAINT AFP_PK PRIMARY KEY (ID_AFP)
);

-- TABLA AFP
INSERT INTO AFP (ID_AFP, NOM_AFP) VALUES (210, 'Habitat');
INSERT INTO AFP (ID_AFP, NOM_AFP) VALUES (216, 'Cuprum');
INSERT INTO AFP (ID_AFP, NOM_AFP) VALUES (222, 'Provida');
INSERT INTO AFP (ID_AFP, NOM_AFP) VALUES (228, 'Planvital');

--TABLA REGION
INSERT INTO REGION (ID_REGION, NOM_REGION) VALUES (1, 'Región Metropolitana');
INSERT INTO REGION (ID_REGION, NOM_REGION) VALUES (2, 'Valparaíso');
INSERT INTO REGION (ID_REGION, NOM_REGION) VALUES (3, 'Biobío');
INSERT INTO REGION (ID_REGION, NOM_REGION) VALUES (4, 'Los Lagos');

-- TABLA SALUD
INSERT INTO SALUD (ID_SALUD, NOM_SALUD) VALUES (2050, 'FONSA');
INSERT INTO SALUD (ID_SALUD, NOM_SALUD) VALUES (2060, 'ISAPRE COLMENA');
INSERT INTO SALUD (ID_SALUD, NOM_SALUD) VALUES (2070, 'ISAPRE BANMEDICA');
INSERT INTO SALUD (ID_SALUD, NOM_SALUD) VALUES (2080, 'ISAPRE CRUZ BLANCA');

-- TABLA MEDIO_PAGO
INSERT INTO MEDIO_PAGO (ID_MPAGO, NOMBRE_MPAGO) VALUES (11, 'Efectivo');
INSERT INTO MEDIO_PAGO (ID_MPAGO, NOMBRE_MPAGO) VALUES (12, 'Tarjeta Débito');
INSERT INTO MEDIO_PAGO (ID_MPAGO, NOMBRE_MPAGO) VALUES (13, 'Tarjeta Crédito');
INSERT INTO MEDIO_PAGO (ID_MPAGO, NOMBRE_MPAGO) VALUES (14, 'Cheque');

--TABLA EMPLEADO
INSERT INTO EMPLEADO VALUES (750, '11111111-1', 'Marcela', 'González', 'Pérez', TO_DATE('15-03-2022', 'DD-MM-YYYY'), 950000, 80000, 'S', 'Administrativo', NULL, 2050, 210);
INSERT INTO EMPLEADO VALUES (753, '22222222-2', 'José', 'Muñoz', 'Ramirez', TO_DATE('10-07-2021', 'DD-MM-YYYY'), 900000, 80000, 'S', 'Administrativo', NULL, 2060, 216);
INSERT INTO EMPLEADO VALUES (756, '33333333-3', 'Verónica', 'Soto', 'Alarcón', TO_DATE('05-01-2020', 'DD-MM-YYYY'), 880000, 80000, 'S', 'Vendedor', 750, 2060, 228);
INSERT INTO EMPLEADO VALUES (759, '44444444-4', 'Luís', 'Reyes', 'Fuentes', TO_DATE('01-04-2023', 'DD-MM-YYYY'), 560000, 80000, 'S', 'Vendedor', 750, 2070, 228);
INSERT INTO EMPLEADO VALUES (762, '55555555-5', 'Claudia', 'Fernández', 'Lagos', TO_DATE('15-04-2023', 'DD-MM-YYYY'), 600000, 80000, 'S', 'Vendedor', 753, 2070, 216);
INSERT INTO EMPLEADO VALUES (765, '66666666-6', 'Carlos', 'Navarro', 'Vega', TO_DATE('01-05-2023', 'DD-MM-YYYY'), 610000, 80000, 'S', 'Administrativo', 753, 2060, 210);
INSERT INTO EMPLEADO VALUES (768, '77777777-7', 'Javiera', 'Pino', 'Rojas', TO_DATE('10-05-2023', 'DD-MM-YYYY'), 650000, 80000, 'S', 'Administrativo', 750, 2050, 210);
INSERT INTO EMPLEADO VALUES (771, '88888888-8', 'Diego', 'Mella', 'Contreras', TO_DATE('12-05-2023', 'DD-MM-YYYY'), 620000, 80000, 'S', 'Vendedor', 750, 2060, 216);
INSERT INTO EMPLEADO VALUES (774, '99999999-9', 'Fernanda', 'Salas', 'Herrera', TO_DATE('18-05-2023', 'DD-MM-YYYY'), 570000, 80000, 'S', 'Vendedor', 753, 2070, 228);
INSERT INTO EMPLEADO VALUES (777, '10101010-0', 'Tomás', 'Vidal', 'Espinoza', TO_DATE('01-06-2023', 'DD-MM-YYYY'), 530000, 80000, 'S', 'Vendedor', NULL, 2050, 222);



--===============================================================================================================================================
 
 
--CASO 4: RECUPERACION DE DATOS (CON LA SENTENCIA SELECT)
--PD: DATOS DE LAS FIGURAS N°3 Y FIGURA N°4

--INFORME N°1
SELECT 
    ID_EMPLEADO AS "IDENTIFICADOR",
    NOMBRE_EMPLEADO || ' ' || APELLIDO_PATERNO || ' ' || APELLIDO_MATERNO AS "NOMBRE COMPLETO",
    SUELDO_BASE AS "SALARIO",
    BONO_JEFATURA AS "BONIFICACION",
    (SUELDO_BASE + BONO_JEFATURA) AS "SALARIO SIMULADO"
FROM EMPLEADO
WHERE ACTIVO = 'S'
  AND BONO_JEFATURA IS NOT NULL
ORDER BY 
    (SUELDO_BASE + BONO_JEFATURA) DESC,
    APELLIDO_PATERNO DESC;
    
--INFORME N°2
SELECT 
    NOMBRE_EMPLEADO || ' ' || APELLIDO_PATERNO || ' ' || APELLIDO_MATERNO AS "EMPLEADO",
    SUELDO_BASE AS "SUELDO",
    ROUND(SUELDO_BASE * 0.08) AS "POSIBLE AUMENTO",
    ROUND(SUELDO_BASE * 1.08) AS "SUELDO SIMULADO"
FROM EMPLEADO
WHERE SUELDO_BASE BETWEEN 550000 AND 800000
ORDER BY SUELDO_BASE ASC;
    
